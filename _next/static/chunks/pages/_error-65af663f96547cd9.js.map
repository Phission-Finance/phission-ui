{"version":3,"file":"static/chunks/pages/_error-65af663f96547cd9.js","mappings":"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","sources":["webpack://_N_E/?89e6","webpack://_N_E/./node_modules/@sentry/utils/esm/requestdata.js","webpack://_N_E/./node_modules/@sentry/nextjs/esm/utils/_error.js","webpack://_N_E/./pages/_error.js","webpack://_N_E/./node_modules/next/error.js","webpack://_N_E/./node_modules/@swc/helpers/src/_async_to_generator.mjs"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_error\",\n      function () {\n        return require(\"private-next-pages/_error.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_error\"])\n      });\n    }\n  ","import { _optionalChain } from './buildPolyfills';\nimport { isString, isPlainObject } from './is.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nvar DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nvar DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nvar DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  var method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  var extractedUser = {};\n  var attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  var requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  var headers = (req.headers || {}) \n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  var method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  var host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  var protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  var originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  var absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n                requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n                requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  var include = {\n    ...DEFAULT_INCLUDES,\n    ..._optionalChain([options, 'optionalAccess', _ => _.include]),\n  };\n\n  if (include.request) {\n    var extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: _optionalChain([options, 'optionalAccess', _2 => _2.deps]) })\n      : extractRequestData(req, { deps: _optionalChain([options, 'optionalAccess', _3 => _3.deps]) });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    var extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    var ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\nexport { addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData };\n//# sourceMappingURL=requestdata.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/hub';\nimport { addExceptionMechanism, addRequestDataToEvent } from '@sentry/utils';\n\n/** Platform-agnostic version of `flush` */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  return client ? client.flush(timeout) : Promise.resolve(false);\n}\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  var statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      addExceptionMechanism(event, {\n        type: 'instrument',\n        handled: true,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      });\n      return event;\n    });\n\n    if (req) {\n      scope.addEventProcessor(event => addRequestDataToEvent(event, req));\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    captureException(err || `_error.js called with falsy error (${err})`);\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await flush(2000);\n}\n\nexport { captureUnderscoreErrorException };\n//# sourceMappingURL=_error.js.map\n","/**\n * NOTE: This requires `@sentry/nextjs` version 7.3.0 or higher.\n *\n * NOTE: If using this with `next` version 12.2.0 or lower, uncomment the\n * penultimate line in `CustomErrorComponent`.\n *\n * This page is loaded by Nextjs:\n *  - on the server, when data-fetching methods throw or reject\n *  - on the client, when `getInitialProps` throws or rejects\n *  - on the client, when a React lifecycle method throws or rejects, and it's\n *    caught by the built-in Nextjs error boundary\n *\n * See:\n *  - https://nextjs.org/docs/basic-features/data-fetching/overview\n *  - https://nextjs.org/docs/api-reference/data-fetching/get-initial-props\n *  - https://reactjs.org/docs/error-boundaries.html\n */\n\nimport * as Sentry from '@sentry/nextjs';\nimport NextErrorComponent from 'next/error';\n\nconst CustomErrorComponent = props => {\n  // If you're using a Nextjs version prior to 12.2.1, uncomment this to\n  // compensate for https://github.com/vercel/next.js/issues/8592\n  // Sentry.captureUnderscoreErrorException(props);\n\n  return <NextErrorComponent statusCode={props.statusCode} />;\n};\n\nCustomErrorComponent.getInitialProps = async contextData => {\n  // In case this is running in a serverless function, await this in order to give Sentry\n  // time to send the error before the lambda exits\n  await Sentry.captureUnderscoreErrorException(contextData);\n\n  // This will contain the status code of the response\n  return NextErrorComponent.getInitialProps(contextData);\n};\n\nexport default CustomErrorComponent;\n","module.exports = require('./dist/pages/_error')\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n"],"names":["window","__NEXT_P","push","DEFAULT_INCLUDES","ip","request","transaction","user","DEFAULT_REQUEST_INCLUDES","DEFAULT_USER_INCLUDES","extractPathForTransaction","req","options","method","toUpperCase","path","source","customRoute","route","baseUrl","originalUrl","url","name","extractRequestData","include","deps","requestData","headers","host","hostname","absoluteUrl","protocol","socket","encrypted","forEach","key","cookies","cookie","parse","query_string","extractQueryParams","undefined","body","data","is","JSON","stringify","normalize","hasOwnProperty","call","addRequestDataToEvent","event","_optionalChain","_","extractedRequestData","Array","isArray","_2","_3","extractedUser","keys","extractUserData","Object","length","remoteAddress","ip_address","type","stack","extractTransaction","startsWith","query","URL","search","replace","async","captureUnderscoreErrorException","contextOrProps","res","err","statusCode","Promise","resolve","pathname","scope","addEventProcessor","handled","function","timeout","client","getClient","flush","CustomErrorComponent","props","NextErrorComponent","getInitialProps","contextData","Sentry","module","exports","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","value","error","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply"],"sourceRoot":""}