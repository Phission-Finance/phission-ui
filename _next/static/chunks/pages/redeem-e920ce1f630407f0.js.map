{"version":3,"file":"static/chunks/pages/redeem-e920ce1f630407f0.js","mappings":"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","sources":["webpack://_N_E/?2cd2","webpack://_N_E/./components/countdown.js","webpack://_N_E/./components/loadingButton.js","webpack://_N_E/./components/swapInput.js","webpack://_N_E/./components/value.js","webpack://_N_E/./pages/redeem.tsx","webpack://_N_E/./components/countdown.module.css","webpack://_N_E/./components/loadingButton.module.css","webpack://_N_E/./components/swapInput.module.css","webpack://_N_E/./components/value.module.css","webpack://_N_E/./styles/redeem.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/redeem\",\n      function () {\n        return require(\"private-next-pages/redeem.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/redeem\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport styles from './countdown.module.css'\nimport Value from \"./value\";\n\n\nfunction Countdown({text, endDate}) {\n    const [init, setInit] = useState(false)\n    const [timeToMerge, setTimeToMerge] = useState({days: 0, hours: 0, minutes: 0, seconds:0, secondsRemaining: 0, set: false})\n\n    useEffect(() => {\n        const interval = setInterval(function() { makeTimer( endDate) }, 1000)\n        return () => clearInterval(interval);\n    }, []);\n\n    if (!init) {\n        makeTimer( endDate)\n        setInit(true)\n    }\n\n    function makeTimer(date) {\n        let endTime = (Date.parse(date) / 1000);\n        let now = Math.floor(Date.now() / 1000)\n        let timeLeft = endTime - now;\n\n        let days = Math.floor(timeLeft / 86400);\n        let hours = Math.floor((timeLeft - (days * 86400)) / 3600);\n        let minutes = Math.floor((timeLeft - (days * 86400) - (hours * 3600 )) / 60);\n        let seconds = Math.floor((timeLeft - (days * 86400) - (hours * 3600) - (minutes * 60)));\n\n        setTimeToMerge({days: days, hours: hours, minutes: minutes, seconds: seconds, secondsRemaining: timeLeft, set: true})\n    }\n\n    return (\n        <>\n            {\n                timeToMerge.set ?\n                    <div>\n                        <h3>{text}</h3>\n\n                        <div className={styles.clock}>\n                            <Value label={\"Days\"} value={timeToMerge.days} token={undefined} updater={undefined}/>\n                            <Value label={\"Hours\"} value={timeToMerge.hours} token={undefined} updater={undefined}/>\n                            <Value label={\"Min\"} value={timeToMerge.minutes} token={undefined} updater={undefined}/>\n                            <Value label={\"Sec\"} value={timeToMerge.seconds} token={undefined} updater={undefined}/>\n                        </div>\n                    </div> : \"\"\n            }\n        </>\n    )\n\n}\n\nexport default Countdown","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './loadingButton.module.css'\n\n\nfunction LoadingButton({text, action, disabled, width}) {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            action().then(() => {\n                setLoading(false);\n            }).catch((error) => {\n                console.error(error);\n                setLoading(false)\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"primary\"\n            disabled={isLoading || disabled}\n            onClick={!isLoading ? handleClick : null}\n            className={styles.button}\n            width={width ? width : \"200px\"}\n        >\n            {isLoading ? 'Loading…' : text}\n        </Button>\n    );\n}\n\nexport default LoadingButton","import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport styles from './swapInput.module.css'\nimport {useEffect, useState} from \"react\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport {roundString} from \"../helpers/erc20\";\nimport {tokenDictionary, eth} from \"../const/const\";\nimport uuid from \"uuid\";\nimport {useAccount, useBalance} from \"wagmi\";\n\n\nexport default function SwapInput({label, values, token, onChangeInput, onChangeAsset, onChangeBalance}) {\n\n        const [query, setQuery] = useState(\"\");\n\n        const { address, isConnecting, isDisconnected } = useAccount()\n        const { data: balance, isError, isLoading } = useBalance({\n                addressOrName: address,\n                token: token.symbol !== \"ETH\" ? token.address : \"\",\n                watch: true,\n        })\n\n        useEffect(() => {\n                if (onChangeInput) {\n                        const timeOutId = setTimeout(() => onChangeInput(query ? query >= 0 ? query: \"0\" : \"0\"), 500);\n                        return () => clearTimeout(timeOutId);\n                }\n        }, [query]);\n\n        useEffect(() => {\n                if (onChangeBalance) {\n                        onChangeBalance(balance?.value)\n                }\n        }, [balance])\n\n        function handleSetMax() {\n                if (token.symbol === eth.symbol) {\n                        if (balance?.value > 50000000000000000) {\n                                let max = balance.value - 50000000000000000\n                                setQuery(utils.formatUnits(max.toString(), token.decimals))\n                        }\n                } else {\n                        setQuery(balance.formatted)\n                }\n        }\n\n\n\n        function handleChangeDropdown(symbol) {\n                onChangeAsset(tokenDictionary[symbol])\n        }\n\n        return (\n        <div className={styles.container}>\n                <div>\n                        <input min={0} value={query} className={styles.swapInput} type=\"number\" onChange={event => setQuery(event.target.value)}/>\n                        <h4 className={styles.balance}>Bal: {roundString(balance?.formatted)}</h4>\n                </div>\n\n                <div>\n                        <DropdownButton className={styles.dropdownButton} id=\"dropdown-basic-button\" title={token.symbol} onSelect={handleChangeDropdown}>\n                                {values.map((op, index) => (\n                                    // eslint-disable-next-line react/jsx-key\n                                    <Dropdown.Item key={index} eventKey={op}>{op}</Dropdown.Item>\n                                ))}\n                        </DropdownButton>\n                        <button onClick={handleSetMax}>Set Max</button>\n                </div>\n\n\n\n        </div>\n    )\n}","import styles from './value.module.css'\nimport {roundString} from \"../helpers/erc20\";\nimport {utils} from \"ethers\";\nimport {useEffect, useState} from \"react\";\n\n\n\nexport default function Value({label, value, token, symbol, updater}) {\n\n    const [before, setBefore] = useState(true)\n\n    useEffect(() => {\n        setBefore(symbol === \"$\")\n    }, [symbol])\n\n    useEffect(() => {\n        if (updater) {\n            let interval = setInterval(() => {\n                updater()\n            }, 2000)\n\n            //Clean up can be done like this\n            return () => {\n                clearInterval(interval);\n            }\n        }\n    })\n\n    return (\n        <div className={styles.container}>\n            <h4>{ before && symbol ?  symbol + \"\" : \"\"}{token && value ? roundString(utils.formatUnits(value, token.decimals)): value}{!before && symbol ? \"\" + symbol : \"\"}</h4>\n            <label className={styles.label}>{label}</label>\n        </div>\n    )\n}","import type { NextPage } from 'next';\nimport styles from '../styles/redeem.module.css';\nimport Countdown from \"../components/countdown\";\nimport SwapInput from \"../components/swapInput\";\nimport {lps, lpw, phi, redeemPoS, treasury, uniswapRouter, weth, weths, wethSplitContract} from \"../const/const\";\nimport SwapValue from \"../components/swapValue\";\nimport {SetStateAction, useEffect, useState} from \"react\";\nimport {useAccount, useBalance, useContractWrite, usePrepareContractWrite} from \"wagmi\";\nimport {BigNumber, ethers} from \"ethers\";\nimport LoadingButton from \"../components/loadingButton\";\nimport Balance from \"../components/balance\";\nimport ApprovalButton from \"../components/approvalButton\";\nimport {swapExactTokensForTokens} from \"../helpers/erc20\";\n\nconst Redeem: NextPage = () => {\n    const expectedRedeemDate = \"2022-09-20T00:00:00Z\"\n    const expectedMergeDate = \"2022-09-15T04:20:00Z\"\n\n    const {address, isConnecting, isDisconnected} = useAccount()\n\n    const [redeemAsset, setRedeemAsset] = useState(weths)\n    // @ts-ignore\n    const [redeemData, setRedeemData] = useState(redeemPoS[weths.symbol])\n\n    const [redeemAssetBalance, setRedeemAssetBalance] = useState(BigNumber.from(0))\n    const [redeemAssetAmount, setRedeemAssetAmount] = useState(BigNumber.from(0))\n    const [redeemButtonState, setRedeemButtonState] = useState({text: \"Redeem for WETH\", disabled: true})\n\n    const [phiBalance, setPhiBalance] = useState(BigNumber.from(0))\n    const [treasuryRedeemButtonState, setTreasuryRedeemButtonState] = useState({text: \"Redeem\", disabled: true})\n\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\n\n    useEffect(() => {\n        if (approvalNeeded) {\n            if (!treasuryRedeemButtonState.disabled) {\n                setTreasuryRedeemButtonState({\n                    text: treasuryRedeemButtonState.text,\n                    disabled: true\n                })\n            }\n        } else {\n            if (treasuryRedeemButtonState.disabled) {\n                setTreasuryRedeemButtonState({\n                    text: treasuryRedeemButtonState.text,\n                    disabled: false\n                })\n            }\n        }\n    }, [approvalNeeded])\n\n    useEffect(() => {\n        if (phiBalance.gt(0)) {\n            if (!approvalNeeded) {\n                setTreasuryRedeemButtonState({\n                    text: treasuryRedeemButtonState.text,\n                    disabled: false\n                })\n            }\n        }\n    }, [phiBalance])\n\n\n    useEffect(() => {\n        setRedeemButtonState({// @ts-ignore\n            text: `Redeem for ${redeemPoS[redeemAsset.symbol].redeemToken.symbol}`,\n            disabled: redeemButtonState.disabled\n        })\n    }, [redeemAsset])\n\n\n    useEffect(() => {\n        // @ts-ignore\n        setRedeemData(redeemPoS[redeemAsset.symbol])\n    }, [redeemAsset])\n\n    useEffect(() => {\n        if (redeemAssetAmount.gt(0) && redeemAssetAmount.lte(redeemAssetBalance)) {\n            if (redeemButtonState.disabled) {\n                setRedeemButtonState({\n                    text: redeemButtonState.text,\n                    disabled: false\n                })\n            }\n        } else {\n            if (!redeemButtonState.disabled) {\n                setRedeemButtonState({\n                    text: redeemButtonState.text,\n                    disabled: true\n                })\n            }\n        }\n    }, [redeemAssetAmount])\n\n\n    const { config: redeemTokenConfig } = usePrepareContractWrite({\n        addressOrName: redeemData.redeemContract.address,\n        contractInterface: redeemData.redeemContract.abi,\n        functionName: 'redeem',\n        args: redeemAssetAmount\n    })\n    const { data: dataRedeemToken, isLoading: isLoadingRedeemToken, isSuccess: isSuccessRedeemToken, write: writeRedeemToken } = useContractWrite(redeemTokenConfig)\n\n\n\n    const { config: redeemTreasuryConfig } = usePrepareContractWrite({\n        addressOrName: treasury.address,\n        contractInterface: treasury.abi,\n        functionName: 'redeem',\n        args: phiBalance\n    })\n    const { data: dataRedeemTreasury, isLoading: isLoadingRedeemTreasury, isSuccess: isSuccessRedeemTreasury, write: writeRedeemTreasury } = useContractWrite(redeemTreasuryConfig)\n\n\n    function handlerOnChangeInput(val: string) {\n        setRedeemAssetAmount(ethers.utils.parseUnits(val, redeemAsset.decimals))\n    }\n\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.main}>\n                <h4>Redeem Tokens</h4>\n\n                <SwapInput label={\"Redeem Asset\"}\n                           values={Object.keys(redeemPoS)}\n                           token={redeemAsset}\n                           onChangeAsset={setRedeemAsset} onChangeInput={handlerOnChangeInput}\n                           onChangeBalance={setRedeemAssetBalance}/>\n\n                <LoadingButton text={redeemButtonState.text} action={async () => await writeRedeemToken?.()}\n                               disabled={redeemButtonState.disabled || !writeRedeemToken} width={undefined}/>\n            </div>\n            <div className={styles.main}>\n                <Countdown text={\"Treasury Redemption\"} endDate={expectedRedeemDate}/>\n            </div>\n\n            </div>\n    );\n};\n\nexport default Redeem;\n\n\n// <div className={styles.main} hidden={true}>\n//     <h4>Redeem from Treasury</h4>\n//     <Balance label={phi.symbol} token={phi} setParentBalance={(val: { value: SetStateAction<BigNumber>; }) => {\n//         setPhiBalance(val?.value)\n//     }}/>\n//     <ApprovalButton tokenIn={phi} tokenInAmount={phiBalance} spender={{\n//         contract: treasury,\n//         needsApproval: true\n//     }} setApprovalNeeded={setApprovalNeeded} />\n//     <LoadingButton text={treasuryRedeemButtonState.text} action={async () => await writeRedeemTreasury?.()} disabled={treasuryRedeemButtonState.disabled || !writeRedeemTreasury} width={undefined} />\n// </div>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"countdown_clock__bfk5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"loadingButton_button__f0GQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"swapInput_container__y2UWD\",\"swapInput\":\"swapInput_swapInput__cssZy\",\"balance\":\"swapInput_balance__S3DUq\",\"dropdownButton\":\"swapInput_dropdownButton__ZWzTk\",\"value\":\"swapInput_value__zQtjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"value_container__awOM2\",\"label\":\"value_label__BIgGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"redeem_main__jLYT6\",\"buttonGroup\":\"redeem_buttonGroup__Y1yoI\"};"],"names":["window","__NEXT_P","push","text","endDate","makeTimer","date","timeLeft","Date","parse","Math","floor","now","days","hours","minutes","seconds","setTimeToMerge","secondsRemaining","set","useState","init","setInit","timeToMerge","useEffect","interval","setInterval","clearInterval","div","h3","className","styles","Value","label","value","token","undefined","updater","action","disabled","width","isLoading","setLoading","then","catch","error","console","Button","variant","onClick","SwapInput","values","onChangeInput","onChangeAsset","onChangeBalance","query","setQuery","useAccount","address","useBalance","isConnecting","isDisconnected","addressOrName","symbol","watch","data","isError","timeOutId","setTimeout","clearTimeout","balance","input","min","type","onChange","event","target","h4","roundString","formatted","DropdownButton","id","title","onSelect","tokenDictionary","map","op","index","Dropdown","eventKey","button","eth","max","utils","toString","decimals","before","setBefore","weths","redeemAsset","setRedeemAsset","redeemPoS","redeemData","setRedeemData","BigNumber","redeemAssetBalance","setRedeemAssetBalance","redeemAssetAmount","setRedeemAssetAmount","redeemButtonState","setRedeemButtonState","phiBalance","treasuryRedeemButtonState","setTreasuryRedeemButtonState","approvalNeeded","gt","redeemToken","lte","config","usePrepareContractWrite","redeemContract","contractInterface","abi","functionName","args","useContractWrite","redeemTokenConfig","write","isSuccess","treasury","redeemTreasuryConfig","Object","keys","val","ethers","LoadingButton","writeRedeemToken","Countdown","module","exports"],"sourceRoot":""}