{"version":3,"file":"static/chunks/pages/zap-d1ea0f5410223257.js","mappings":"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","sources":["webpack://_N_E/?e2d2","webpack://_N_E/./components/approvalButton.js","webpack://_N_E/./components/input.js","webpack://_N_E/./components/loadingButton.js","webpack://_N_E/./components/swapInput.js","webpack://_N_E/./components/swapValue.js","webpack://_N_E/./pages/zap.tsx","webpack://_N_E/./components/approvalButton.module.css","webpack://_N_E/./components/input.module.css","webpack://_N_E/./components/loadingButton.module.css","webpack://_N_E/./components/swapInput.module.css","webpack://_N_E/./styles/Home.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/zap\",\n      function () {\n        return require(\"private-next-pages/zap.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/zap\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './approvalButton.module.css'\nimport {approve, checkAllowance} from \"../helpers/erc20\";\nimport {trades} from \"../const/const\";\nimport {BigNumber} from \"ethers\";\nimport {useAccount, useContractRead, useProvider, useSigner} from \"wagmi\";\n\nfunction ApprovalButton({tokenIn, tokenInAmount, spender, setApprovalNeeded}) {\n\n    const provider = useProvider()\n    const { data: signer } = useSigner()\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n\n    const [show, setShow] = useState(false);\n    // const [allowance, setAllowance] = useState(BigNumber.from(0));\n    const [buttonState, setButtonState] = useState({loading: false, text: \"Approve\"});\n\n\n\n    const { data: allowance } = useContractRead({\n        addressOrName: tokenIn.address,\n        contractInterface: tokenIn.abi,\n        functionName: 'allowance',\n        args: [address, spender?.contract.address],\n        watch: true,\n        onSuccess(data) {\n            console.log('Allowance Success', data)\n        },\n        onError(error) {\n            console.log('Allowance Error', error)\n        },\n    })\n\n\n\n    useEffect(() => {\n        if (spender) {\n            handleCheckAllowance()\n        }\n    })\n\n    async function handleApprove() {\n        setButtonState({loading: true, text: \"Approving...\"})\n        await approve(provider, signer, tokenIn, spender.contract.address, tokenInAmount).then((approved) => {\n            setButtonState({loading: false, text: \"Approve\"})\n            if (approved) {\n                setShow(false)\n                setApprovalNeeded(false)\n            }\n        })\n    }\n\n    function handleCheckAllowance() {\n                if (spender.needsApproval && tokenInAmount) {\n                    console.log(\"Allowance\", tokenIn.symbol, allowance?.toString())\n\n                    if (!tokenInAmount?.isZero() && tokenInAmount?.gt(allowance ? allowance : BigNumber.from(0))) {\n                        if (!show) {\n                            setShow(true)\n                        }\n                        setApprovalNeeded(true)\n                    } else {\n                        // setButtonState({loading: false, text: \"Approve\", hidden: true})\n                        if (show) {\n                            setShow(false)\n                        }\n                    }\n                } else {\n                    if (show) {\n                        setShow(false)\n                    }\n                }\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"primary\"\n                disabled={buttonState.loading}\n                hidden={!show}\n                onClick={!buttonState.loading ? handleApprove : null}\n                className={styles.button}\n            >\n                {buttonState.text}\n            </Button>\n        </div>\n\n    );\n}\n\nexport default ApprovalButton","import styles from './input.module.css'\nimport {useEffect, useState} from \"react\";\n\nexport default function Input({label, value, onChangeInput, unit, small}) {\n        return (\n        <div className={styles.container}>\n                { label ? <label>{label}</label> : <></>}\n\n                <input className={small ? styles.smallInput:styles.normalInput }  type=\"number\" value={value} onChange={event => onChangeInput(event.target.value)} />\n                {unit? <span className={styles.unit}>{unit}</span>:\"\"}\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './loadingButton.module.css'\n\n\nfunction LoadingButton({text, action, disabled, width}) {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            action().then(() => {\n                setLoading(false);\n            }).catch((error) => {\n                console.error(error);\n                setLoading(false)\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"primary\"\n            disabled={isLoading || disabled}\n            onClick={!isLoading ? handleClick : null}\n            className={styles.button}\n            width={width ? width : \"200px\"}\n        >\n            {isLoading ? 'Loading…' : text}\n        </Button>\n    );\n}\n\nexport default LoadingButton","import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport styles from './swapInput.module.css'\nimport {useEffect, useState} from \"react\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport {roundString} from \"../helpers/erc20\";\nimport {tokenDictionary, eth} from \"../const/const\";\nimport uuid from \"uuid\";\nimport {useAccount, useBalance} from \"wagmi\";\n\n\nexport default function SwapInput({label, values, token, onChangeInput, onChangeAsset, onChangeBalance}) {\n\n        const [query, setQuery] = useState(\"\");\n\n        const { address, isConnecting, isDisconnected } = useAccount()\n        const { data: balance, isError, isLoading } = useBalance({\n                addressOrName: address,\n                token: token.symbol !== \"ETH\" ? token.address : \"\",\n                watch: true,\n        })\n\n        useEffect(() => {\n                if (onChangeInput) {\n                        const timeOutId = setTimeout(() => onChangeInput(query ? query >= 0 ? query: \"0\" : \"0\"), 500);\n                        return () => clearTimeout(timeOutId);\n                }\n        }, [query]);\n\n        useEffect(() => {\n                if (onChangeBalance) {\n                        onChangeBalance(balance?.value)\n                }\n        }, [balance])\n\n        function handleSetMax() {\n                if (token.symbol === eth.symbol) {\n                        if (balance?.value > 50000000000000000) {\n                                let max = balance.value - 50000000000000000\n                                setQuery(utils.formatUnits(max.toString(), token.decimals))\n                        }\n                } else {\n                        setQuery(balance.formatted)\n                }\n        }\n\n\n\n        function handleChangeDropdown(symbol) {\n                onChangeAsset(tokenDictionary[symbol])\n        }\n\n        return (\n        <div className={styles.container}>\n                <div>\n                        <input min={0} value={query} className={styles.swapInput} type=\"number\" onChange={event => setQuery(event.target.value)}/>\n                        <h4 className={styles.balance}>Bal: {roundString(balance?.formatted)}</h4>\n                </div>\n\n                <div>\n                        <DropdownButton className={styles.dropdownButton} id=\"dropdown-basic-button\" title={token.symbol} onSelect={handleChangeDropdown}>\n                                {values.map((op, index) => (\n                                    // eslint-disable-next-line react/jsx-key\n                                    <Dropdown.Item key={index} eventKey={op}>{op}</Dropdown.Item>\n                                ))}\n                        </DropdownButton>\n                        <button onClick={handleSetMax}>Set Max</button>\n                </div>\n\n\n\n        </div>\n    )\n}","import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport styles from './swapInput.module.css'\nimport {useEffect, useState} from \"react\";\nimport {roundString} from \"../helpers/erc20\";\nimport {BigNumber, utils} from \"ethers\";\nimport {tokenDictionary} from \"../const/const\";\nimport {useAccount, useBalance} from \"wagmi\";\n\n\nexport default function SwapValue({label, value, token, values, onChangeAsset}) {\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n    const { data: balance, isError, isLoading } = useBalance({\n        addressOrName: address,\n        token: token.symbol !== \"ETH\" ? token.address : \"\",\n        watch: true,\n    })\n\n    function handleChangeDropdown(symbol) {\n        onChangeAsset(tokenDictionary[symbol])\n    }\n\n    return (\n        <div className={styles.container}>\n            <div>\n                <p className={styles.value}>{roundString(utils.formatUnits(value.toString(), token.decimals))}</p>\n                <h4 className={styles.balance}>Bal: {roundString(balance?.formatted)}</h4>\n            </div>\n\n            <div>\n                <DropdownButton className={styles.dropdownButton} id=\"dropdown-basic-button\" title={token.symbol} onSelect={handleChangeDropdown}>\n                    {values.map((op, index) => (\n                        // eslint-disable-next-line react/jsx-key\n                        <Dropdown.Item key={op} eventKey={op}>{op}</Dropdown.Item>\n                    ))}\n                </DropdownButton>\n            </div>\n        </div>\n    )\n}","import type { NextPage } from 'next';\nimport styles from '../styles/Home.module.css';\nimport SwapInput from '../components/swapInput'\nimport Input from '../components/input'\nimport SwapValue from '../components/swapValue'\nimport LoadingButton from '../components/loadingButton'\nimport ApprovalButton from '../components/approvalButton'\nimport {useEffect, useState} from \"react\";\nimport {\n    tokenDictionary,\n    trades,\n    uniswapRouter,\n    weth\n} from \"../const/const\";\nimport {BigNumber, ethers, utils} from 'ethers'\nimport {useAccount, useBalance, useContractRead, useProvider, useSigner} from \"wagmi\";\n\ntype token = {\n    symbol: string\n    decimals: number,\n    address: string,\n    abi: string,\n    balance: BigNumber\n}\n\ntype trade = {\n    contract: token,\n    func: (x: BigNumber, minAmountOut: BigNumber, callStatic: boolean) => Promise<any>,\n    needsApproval:boolean\n}\n\n\nconst Zap: NextPage = () => {\n\n    const { data: signer } = useSigner()\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n\n    const [init, setInit] = useState(false)\n\n    const [trade, setTrade] = useState(undefined)\n\n    const [assetIn, setAssetIn] = useState(tokenDictionary[\"ETH\"])\n    const [assetInAmount, setAssetInAmount] = useState(BigNumber.from(0))\n    const [assetInBalance, setAssetInBalance] = useState(BigNumber.from(0))\n\n    const [assetOut, setAssetOut] = useState(tokenDictionary[\"WETH\"])\n    const [assetOutAmount, setAssetOutAmount] = useState(BigNumber.from(0))\n\n    const [slippage, setSlippage] = useState(\"1\")\n\n    const [buttonState, setButtonState] = useState({text: 'Swap', disabled: true})\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\n    const [staticCallError, setStaticCallError] = useState(false)\n\n\n\n    useEffect(() => {\n        if (assetInAmount && assetInBalance) {\n            if (assetInAmount.lte(assetInBalance)) {\n                handleSetAssetOutAmount()\n                handleSwapButtonState(true, trade)\n            } else {\n                handleSwapButtonState(false, trade)\n            }\n        }\n    }, [assetInAmount,assetInBalance, trade])\n\n    useEffect(() => {\n        // @ts-ignore\n        if (trades[assetIn.symbol]) {\n            // @ts-ignore\n            if (trades[assetIn.symbol][assetOut.symbol]) {\n                // @ts-ignore\n                setTrade(trades[assetIn.symbol][assetOut.symbol])\n            } else {\n                setTrade(undefined)\n            }\n        } else  {\n            setTrade(undefined)\n        }\n    }, [assetIn, assetOut])\n\n\n    // const { data: calculatedAmountOut } = useContractRead({\n    //     addressOrName: getTradeAddress(assetIn, assetOut),\n    //     contractInterface: getTradeAbi(assetIn, assetOut),\n    //     functionName: getTradeFunctionName(assetIn, assetOut),\n    //     args: getTradeArgsFunction(assetIn, assetOut)(assetInAmount, BigNumber.from(0), address),\n    //     overrides: getTradeOverrideFunction(assetIn, assetOut)(assetInAmount, BigNumber.from(0), address),\n    //     watch: true,\n    //     on\n    // })\n\n    function handleSetSlippage(val: string) {\n        console.log(\"Set Slippage\", val)\n        setSlippage(val)\n    }\n\n\n\n    function handleAssetInValueChange(val: string) {\n        console.log(\"Swap\", val, assetIn, assetOut)\n\n        let amountIn = ethers.utils.parseUnits(val, assetIn.decimals)\n\n        setAssetInAmount(amountIn)\n    }\n\n    function handleSetAssetOutAmount() {\n\n        if (trade) {\n\n                if (!assetInAmount.isZero()) {\n                    // @ts-ignore\n                    trade.func(signer,assetInAmount,BigNumber.from(0), address,true).then((response: any) => {\n                        console.log(\"Static Call\", response)\n                        let amountOut: BigNumber\n                        // @ts-ignore\n                        if (trades[assetIn.symbol][assetOut.symbol].contract == uniswapRouter) {\n                            amountOut = response[1]\n                            // @ts-ignore\n                        } else if (trades[assetIn.symbol][assetOut.symbol].contract == weth) {\n                            amountOut = assetInAmount\n                        } else {\n                            amountOut = response\n                        }\n\n                        if (!amountOut.eq(assetOutAmount)) {\n                            setAssetOutAmount(amountOut)\n                        }\n\n                        if (staticCallError) {\n                            setStaticCallError(false)\n                        }\n                    }).catch((err: any) => {\n                        console.log(\"Static Call Error\", err)\n                        if (!assetOutAmount.isZero()) {\n                            setAssetOutAmount(BigNumber.from(0))\n                        }\n\n                        if (!staticCallError) {\n                            setStaticCallError(true)\n                        }\n                    })\n                }\n\n        }\n\n\n    }\n\n    function handleSwapButtonState(sufficientBalance: boolean, trade: trade|undefined) {\n        console.log(\"handleSwapButtonState\", sufficientBalance, staticCallError, approvalNeeded)\n        if (!trade) {\n            setButtonState({text: 'Invalid Zap', disabled: true})\n        } else if (!sufficientBalance) {\n            if (buttonState.text != 'Insufficient Balance') {\n                setButtonState({text: 'Insufficient Balance', disabled: true})\n            }\n        } else if (staticCallError) {\n            if (buttonState.text != 'Error') {\n                setButtonState({text: 'Error', disabled: true})\n            }\n        } else if (assetInAmount.isZero() || approvalNeeded) {\n            if (!buttonState.disabled || buttonState.text != 'Swap')  {\n                setButtonState({text: 'Swap', disabled: true})\n            }\n        } else  {\n            if (buttonState.disabled || buttonState.text != 'Swap') {\n                setButtonState({text: 'Swap', disabled: false})\n            }\n        }\n    }\n\n    async function handleExecute() {\n       if (trade){\n                // @ts-ignore\n           await trade.func(signer,assetInAmount, assetOutAmount.mul(BigNumber.from(1000-(parseFloat(slippage)*10))).div(BigNumber.from(1000)), address,false)\n        }\n    }\n\n    // function getTrade() {\n    //     // @ts-ignore\n    //     if (trades[assetIn.symbol]) {\n    //         // @ts-ignore\n    //         if (trades[assetIn.symbol][assetOut.symbol]) {\n    //             // @ts-ignore\n    //             return trades[assetIn.symbol][assetOut.symbol]\n    //         }\n    //     }\n    //     return {}\n    // }\n\n\n    return (\n    <div className={styles.container}>\n\n        <main className={styles.main}>\n            <SwapInput label={\"Asset In\"} values={Object.keys(tokenDictionary).sort()}\n                       token={assetIn}\n                       onChangeInput={handleAssetInValueChange} onChangeAsset={setAssetIn}\n                       onChangeBalance={setAssetInBalance}/>\n\n            <SwapValue label={\"Asset Out\"} values={Object.keys(tokenDictionary).sort()}\n                       onChangeAsset={setAssetOut} value={assetOutAmount} token={assetOut}/>\n\n            <Input label={\"Slippage\"} value={slippage} onChangeInput={handleSetSlippage} unit={\"%\"} small={true}></Input>\n\n            <ApprovalButton tokenIn={assetIn} spender={trade}\n                            tokenInAmount={assetInAmount} setApprovalNeeded={setApprovalNeeded}></ApprovalButton>\n            <LoadingButton text={buttonState.text} action={handleExecute} disabled={buttonState.disabled}\n                           width={undefined}/>\n        </main>\n    </div>\n  );\n};\n\nexport default Zap;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"approvalButton_button__LESyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"input_container__OnbqA\",\"smallInput\":\"input_smallInput__NRpk0\",\"unit\":\"input_unit__j4f1e\",\"normalInput\":\"input_normalInput__1PqBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"loadingButton_button__f0GQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"swapInput_container__y2UWD\",\"swapInput\":\"swapInput_swapInput__cssZy\",\"balance\":\"swapInput_balance__S3DUq\",\"dropdownButton\":\"swapInput_dropdownButton__ZWzTk\",\"value\":\"swapInput_value__zQtjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__nLjiQ\",\"footer\":\"Home_footer____T7K\",\"title\":\"Home_title__T09hD\",\"description\":\"Home_description__41Owk\",\"grid\":\"Home_grid__GxQ85\",\"card\":\"Home_card___LpL1\",\"horizontalContainer\":\"Home_horizontalContainer__bpyg8\",\"buttonGroup\":\"Home_buttonGroup__6xIkp\"};"],"names":["window","__NEXT_P","push","tokenIn","tokenInAmount","spender","setApprovalNeeded","provider","useProvider","data","useSigner","useAccount","address","useState","isConnecting","isDisconnected","show","setShow","loading","text","buttonState","setButtonState","useContractRead","addressOrName","contractInterface","abi","functionName","args","contract","watch","onSuccess","console","log","onError","error","handleApprove","approve","signer","then","approved","useEffect","needsApproval","symbol","allowance","toString","isZero","gt","BigNumber","div","Button","variant","disabled","hidden","onClick","className","styles","Input","label","value","onChangeInput","unit","small","input","type","onChange","event","target","span","action","width","isLoading","setLoading","catch","SwapInput","values","token","onChangeAsset","onChangeBalance","query","setQuery","useBalance","isError","timeOutId","setTimeout","clearTimeout","balance","min","h4","roundString","formatted","DropdownButton","id","title","onSelect","tokenDictionary","map","op","index","Dropdown","eventKey","button","eth","max","utils","decimals","SwapValue","p","handleSwapButtonState","sufficientBalance","trade","staticCallError","approvalNeeded","assetInAmount","undefined","setTrade","assetIn","setAssetIn","setAssetInAmount","assetInBalance","setAssetInBalance","assetOut","setAssetOut","assetOutAmount","setAssetOutAmount","slippage","setSlippage","setStaticCallError","handleExecute","func","mul","parseFloat","lte","response","amountOut","trades","uniswapRouter","weth","eq","err","main","Object","keys","sort","val","amountIn","ethers","ApprovalButton","LoadingButton","module","exports"],"sourceRoot":""}