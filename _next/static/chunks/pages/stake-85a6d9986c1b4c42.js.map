{"version":3,"file":"static/chunks/pages/stake-85a6d9986c1b4c42.js","mappings":"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","sources":["webpack://_N_E/?d716","webpack://_N_E/./components/approvalButton.js","webpack://_N_E/./components/balance.js","webpack://_N_E/./components/input.js","webpack://_N_E/./components/loadingButton.js","webpack://_N_E/./components/value.js","webpack://_N_E/./components/farm.js","webpack://_N_E/./pages/stake.tsx","webpack://_N_E/./components/approvalButton.module.css","webpack://_N_E/./components/balance.module.css","webpack://_N_E/./components/farm.module.css","webpack://_N_E/./components/input.module.css","webpack://_N_E/./components/loadingButton.module.css","webpack://_N_E/./components/value.module.css","webpack://_N_E/./styles/farm.module.css","webpack://_N_E/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://_N_E/./node_modules/react-bootstrap/esm/ToggleButton.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/stake\",\n      function () {\n        return require(\"private-next-pages/stake.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/stake\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './approvalButton.module.css'\nimport {approve, checkAllowance} from \"../helpers/erc20\";\nimport {trades} from \"../const/const\";\nimport {BigNumber} from \"ethers\";\nimport {useAccount, useContractRead, useProvider, useSigner} from \"wagmi\";\n\nfunction ApprovalButton({tokenIn, tokenInAmount, spender, setApprovalNeeded}) {\n\n    const provider = useProvider()\n    const { data: signer } = useSigner()\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n\n    const [show, setShow] = useState(false);\n    // const [allowance, setAllowance] = useState(BigNumber.from(0));\n    const [buttonState, setButtonState] = useState({loading: false, text: \"Approve\"});\n\n\n\n    const { data: allowance } = useContractRead({\n        addressOrName: tokenIn.address,\n        contractInterface: tokenIn.abi,\n        functionName: 'allowance',\n        args: [address, spender?.contract.address],\n        watch: true,\n        onSuccess(data) {\n            console.log('Allowance Success', data)\n        },\n        onError(error) {\n            console.log('Allowance Error', error)\n        },\n    })\n\n\n\n    useEffect(() => {\n        if (spender) {\n            handleCheckAllowance()\n        }\n    })\n\n    async function handleApprove() {\n        setButtonState({loading: true, text: \"Approving...\"})\n        await approve(provider, signer, tokenIn, spender.contract.address, tokenInAmount).then((approved) => {\n            setButtonState({loading: false, text: \"Approve\"})\n            if (approved) {\n                setShow(false)\n                setApprovalNeeded(false)\n            }\n        })\n    }\n\n    function handleCheckAllowance() {\n                if (spender.needsApproval && tokenInAmount) {\n                    console.log(\"Allowance\", tokenIn.symbol, allowance?.toString())\n\n                    if (!tokenInAmount?.isZero() && tokenInAmount?.gt(allowance ? allowance : BigNumber.from(0))) {\n                        if (!show) {\n                            setShow(true)\n                        }\n                        setApprovalNeeded(true)\n                    } else {\n                        // setButtonState({loading: false, text: \"Approve\", hidden: true})\n                        if (show) {\n                            setShow(false)\n                        }\n                    }\n                } else {\n                    if (show) {\n                        setShow(false)\n                    }\n                }\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"primary\"\n                disabled={buttonState.loading}\n                hidden={!show}\n                onClick={!buttonState.loading ? handleApprove : null}\n                className={styles.button}\n            >\n                {buttonState.text}\n            </Button>\n        </div>\n\n    );\n}\n\nexport default ApprovalButton","import {useEffect, useState} from \"react\";\nimport {BigNumber, utils} from \"ethers\";\nimport styles from \"./balance.module.css\";\nimport {useAccount, useBalance, useContractRead} from \"wagmi\";\nimport {roundString} from \"../helpers/erc20\";\n\nexport default function Balance({label, token, setParentBalance}) {\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n    const { data: balance, isError, isLoading } = useBalance({\n        addressOrName: address,\n        token: token.symbol !== \"ETH\" ? token.address : \"\",\n        watch: true,\n    })\n\n    useEffect(() => {\n        if (setParentBalance) {\n            setParentBalance(balance)\n        }\n    }, [balance])\n\n    return (\n        <div className={styles.container}>\n\n\n            <h4>{isError}</h4>\n            <h4>{isLoading}</h4>\n            <h4>{roundString(balance?.formatted)}</h4>\n\n            <label className={styles.label}>Balance {label}</label>\n        </div>\n    )\n}","import styles from './input.module.css'\nimport {useEffect, useState} from \"react\";\n\nexport default function Input({label, value, onChangeInput, unit, small}) {\n        return (\n        <div className={styles.container}>\n                { label ? <label>{label}</label> : <></>}\n\n                <input className={small ? styles.smallInput:styles.normalInput }  type=\"number\" value={value} onChange={event => onChangeInput(event.target.value)} />\n                {unit? <span className={styles.unit}>{unit}</span>:\"\"}\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './loadingButton.module.css'\n\n\nfunction LoadingButton({text, action, disabled, width}) {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            action().then(() => {\n                setLoading(false);\n            }).catch((error) => {\n                console.error(error);\n                setLoading(false)\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"primary\"\n            disabled={isLoading || disabled}\n            onClick={!isLoading ? handleClick : null}\n            className={styles.button}\n            width={width ? width : \"200px\"}\n        >\n            {isLoading ? 'Loading…' : text}\n        </Button>\n    );\n}\n\nexport default LoadingButton","import styles from './value.module.css'\nimport {roundString} from \"../helpers/erc20\";\nimport {utils} from \"ethers\";\nimport {useEffect, useState} from \"react\";\n\n\n\nexport default function Value({label, value, token, symbol, updater}) {\n\n    const [before, setBefore] = useState(true)\n\n    useEffect(() => {\n        setBefore(symbol === \"$\")\n    }, [symbol])\n\n    useEffect(() => {\n        if (updater) {\n            let interval = setInterval(() => {\n                updater()\n            }, 2000)\n\n            //Clean up can be done like this\n            return () => {\n                clearInterval(interval);\n            }\n        }\n    })\n\n    return (\n        <div className={styles.container}>\n            <h4>{ before && symbol ?  symbol + \"\" : \"\"}{token && value ? roundString(utils.formatUnits(value, token.decimals)): value}{!before && symbol ? \"\" + symbol : \"\"}</h4>\n            <label className={styles.label}>{label}</label>\n        </div>\n    )\n}","import styles from './farm.module.css'\nimport LoadingButton from \"./loadingButton\";\nimport Input from \"./input\";\nimport {useState} from \"react\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport ApprovalButton from \"./approvalButton\";\nimport {useEffect} from \"react\";\nimport Value from \"./value\";\nimport Balance from \"./balance\";\nimport aprCalc from \"../helpers/apr\";\nimport {useAccount, useContractRead, useProvider, useSigner} from \"wagmi\";\nimport {roundString} from \"../helpers/erc20\";\n\n\nfunction Farm({tab, farm}) {\n    const provider = useProvider()\n    const { data: signer } = useSigner()\n\n    const [amountIn, setAmountIn] = useState(BigNumber.from(0))\n    const [inputValue, setInputValue] = useState(\"0\")\n    const [apr, setApr] = useState(0)\n    const [balance, setBalance] = useState(BigNumber.from(0));\n\n    const [stakeButtonState, setStakeButtonState] = useState({text: 'Stake', disabled: false, action: stake})\n    const [unstakeButtonState, setUnstakeButtonState] = useState({text: 'Unstake', disabled: false, action: unstake})\n    const [claimButtonState, setClaimButtonState] = useState({text: 'Claim', disabled: false, action: claim})\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n    const { data: staked} = useContractRead({\n        addressOrName: farm.contract.address,\n        contractInterface: JSON.parse(farm.contract.abi),\n        functionName: 'balanceOf',\n        args: address,\n        watch: true,\n    })\n\n    const { data: earned } = useContractRead({\n        addressOrName: farm.contract.address,\n        contractInterface: JSON.parse(farm.contract.abi),\n        functionName: 'earned',\n        args: address,\n        watch: true,\n    })\n\n\n\n    useEffect(() => {\n        if (farm.contract) {\n            handleCheckAPR()\n        }\n    }, [amountIn, farm])\n\n    async function stake() {\n        console.log(\"stake\", amountIn)\n        await farm.stakeFunc(signer,amountIn)\n    }\n\n    async function unstake() {\n        await farm.unStakeFunc(signer,amountIn)\n    }\n\n    async function claim() {\n        await farm.claimFunc(signer)\n    }\n\n    function handleCheckAPR() {\n        farm.aprFunc().then((val) => {\n            if (apr !== val) {\n                setApr(val)\n            }\n        })\n    }\n\n\n    if (!aprCalc.init) {\n        aprCalc.initialize(provider).then(() => {\n            handleCheckAPR()\n        })\n    }\n\n    function handleChangeInput(val) {\n\n\n        console.log(\"handleChangeInput\", val, farm.token.symbol)\n\n        let amtIn = ethers.utils.parseUnits(val ? val : \"0\", farm.token.decimals)\n        setInputValue(val)\n        setAmountIn(amtIn)\n    }\n\n    function handleSetMax() {\n        handleChangeInput(balance?.formatted)\n    }\n\n    function handleSetMaxStaked() {\n        handleChangeInput(roundString(utils.formatUnits(staked?.toString(), farm.token.decimals)))\n    }\n\n    async function openInNewTab(url) {\n        window.open(url, '_blank', 'noopener,noreferrer');\n    }\n\n    return (\n        <div className={styles.farm}>\n            <div className={styles.inputContainer}>\n                <label  className={styles.farmName}>{farm.token.symbol}</label>\n                <div className={styles.input}>\n                    <Input onChangeInput={handleChangeInput} value={inputValue} />\n                    {\n                        tab === \"Stake\" ? <button onClick={handleSetMax}>Set Max</button> : <button onClick={handleSetMaxStaked}>Set Max</button>\n                    }\n                </div>\n\n            </div>\n\n            <div className={styles.stats}>\n                <Value label={\"Staked\"} value={staked ? staked : BigNumber.from(0)} token={farm.token}/>\n                <Value label={\"Rewards\"} value={earned} token={farm.token} updater={undefined}/>\n                <Balance label={farm.token.symbol} token={farm.token} setParentBalance={setBalance}/>\n                <Value label={\"APR\"} value={apr?.toFixed(1).toString() + \"%\"} updater={undefined}/>\n            </div>\n\n            <div className={styles.buttonContainer}>\n                <LoadingButton text={\"Deposit To Uniswap\"} action={ async () => await openInNewTab(`https://app.uniswap.org/#/add/v2/${farm.poolTokenA.address}/${farm.poolTokenB.address}`)} disabled={false}/>\n\n                {\n                    tab === \"Stake\" ? <div>\n                        <ApprovalButton tokenIn={farm.token} spender={farm} tokenInAmount={amountIn} setApprovalNeeded={setApprovalNeeded}></ApprovalButton>\n                        <LoadingButton text={stakeButtonState.text} action={stake} disabled={stakeButtonState.disabled}/>\n                    </div> : <div>\n                        <LoadingButton text={unstakeButtonState.text} action={unstake} disabled={unstakeButtonState.disabled}/>\n                    </div>\n                }\n\n                <LoadingButton text={claimButtonState.text} action={claim} disabled={claimButtonState.disabled}/>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Farm","import type { NextPage } from 'next';\nimport styles from '../styles/farm.module.css';\nimport {mint, staking} from \"../const/const\";\nimport {roundString} from \"../helpers/erc20\";\nimport aprCalc from \"../helpers/apr\";\nimport {utils} from \"ethers\";\nimport Farm from '../components/farm';\nimport {ButtonGroup, ToggleButton} from \"react-bootstrap\";\nimport {useState} from \"react\";\n\nconst Stake: NextPage = () => {\n    const [radioValue, setRadioValue] = useState('Stake');\n    const radios = [\n        { name: 'Stake', value: 'Stake' },\n        { name: 'Unstake', value: 'Unstake' },\n    ];\n    return (\n        <div className={styles.container}>\n                <main className={styles.main}>\n                    <div className={styles.buttonGroup}>\n                        <ButtonGroup >\n                            {radios.map((radio, idx) => (\n                                <ToggleButton\n                                    key={idx}\n                                    id={`radio-${idx}`}\n                                    type=\"radio\"\n                                    variant={'outline-primary'}\n                                    name=\"radio\"\n                                    value={radio.value}\n                                    checked={radioValue === radio.value}\n                                    onChange={(e) => setRadioValue(e.currentTarget.value)}\n                                >\n                                    {radio.name}\n                                </ToggleButton>\n                            ))}\n                        </ButtonGroup>\n                    </div>\n                    {staking.map((farm:any, index: number) => (\n                        <Farm tab={radioValue} key={index} farm={farm}></Farm>\n                    ))}\n                </main>\n        </div>\n    );\n};\n\nexport default Stake;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"approvalButton_button__LESyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"balance_container__7C_Xe\",\"label\":\"balance_label__PEcbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"farm_main__6yUTr\",\"farm\":\"farm_farm__vQ6GH\",\"stats\":\"farm_stats__5uFts\",\"inputContainer\":\"farm_inputContainer__qZEga\",\"input\":\"farm_input__D63Wm\",\"buttonContainer\":\"farm_buttonContainer__m_5zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"input_container__OnbqA\",\"smallInput\":\"input_smallInput__NRpk0\",\"unit\":\"input_unit__j4f1e\",\"normalInput\":\"input_normalInput__1PqBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"loadingButton_button__f0GQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"value_container__awOM2\",\"label\":\"value_label__BIgGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"farm_main__Y0L7Q\",\"buttonGroup\":\"farm_buttonGroup__ZJOFa\"};","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst noop = () => undefined;\n\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, { ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;"],"names":["window","__NEXT_P","push","tokenIn","tokenInAmount","spender","setApprovalNeeded","provider","useProvider","data","useSigner","useAccount","address","useState","isConnecting","isDisconnected","show","setShow","loading","text","buttonState","setButtonState","useContractRead","addressOrName","contractInterface","abi","functionName","args","contract","watch","onSuccess","console","log","onError","error","handleApprove","approve","signer","then","approved","useEffect","needsApproval","symbol","allowance","toString","isZero","gt","BigNumber","div","Button","variant","disabled","hidden","onClick","className","styles","Balance","label","token","setParentBalance","useBalance","isError","isLoading","balance","h4","roundString","formatted","Input","value","onChangeInput","unit","small","input","type","onChange","event","target","span","action","width","setLoading","catch","Value","updater","before","setBefore","interval","setInterval","clearInterval","utils","decimals","tab","farm","handleCheckAPR","aprFunc","val","apr","setApr","handleChangeInput","amtIn","ethers","setInputValue","setAmountIn","amountIn","inputValue","setBalance","stake","stakeButtonState","unstake","unstakeButtonState","claim","claimButtonState","JSON","parse","stakeFunc","unStakeFunc","claimFunc","openInNewTab","url","open","aprCalc","button","staked","earned","undefined","toFixed","LoadingButton","poolTokenA","poolTokenB","ApprovalButton","radioValue","setRadioValue","main","ButtonGroup","name","map","radio","idx","ToggleButton","id","checked","e","currentTarget","staking","index","Farm","module","exports","bsPrefix","size","vertical","as","Component","rest","ref","prefix","baseClass","displayName","defaultProps","role","noop","inputRef","props","children","autoComplete","htmlFor"],"sourceRoot":""}