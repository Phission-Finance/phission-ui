{"version":3,"file":"static/chunks/pages/mint-1c3b1a429606b730.js","mappings":"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","sources":["webpack://_N_E/?a259","webpack://_N_E/./components/approvalButton.js","webpack://_N_E/./components/balance.js","webpack://_N_E/./components/loadingButton.js","webpack://_N_E/./components/swapInput.js","webpack://_N_E/./components/burnInput.js","webpack://_N_E/./pages/mint.tsx","webpack://_N_E/./components/approvalButton.module.css","webpack://_N_E/./components/balance.module.css","webpack://_N_E/./components/loadingButton.module.css","webpack://_N_E/./components/swapInput.module.css","webpack://_N_E/./styles/Home.module.css","webpack://_N_E/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://_N_E/./node_modules/react-bootstrap/esm/ToggleButton.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/mint\",\n      function () {\n        return require(\"private-next-pages/mint.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/mint\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './approvalButton.module.css'\nimport {approve, checkAllowance} from \"../helpers/erc20\";\nimport {trades} from \"../const/const\";\nimport {BigNumber} from \"ethers\";\nimport {useAccount, useContractRead, useProvider, useSigner} from \"wagmi\";\n\nfunction ApprovalButton({tokenIn, tokenInAmount, spender, setApprovalNeeded}) {\n\n    const provider = useProvider()\n    const { data: signer } = useSigner()\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n\n    const [show, setShow] = useState(false);\n    // const [allowance, setAllowance] = useState(BigNumber.from(0));\n    const [buttonState, setButtonState] = useState({loading: false, text: \"Approve\"});\n\n\n\n    const { data: allowance } = useContractRead({\n        addressOrName: tokenIn.address,\n        contractInterface: tokenIn.abi,\n        functionName: 'allowance',\n        args: [address, spender?.contract.address],\n        watch: true,\n        onSuccess(data) {\n            console.log('Allowance Success', data)\n        },\n        onError(error) {\n            console.log('Allowance Error', error)\n        },\n    })\n\n\n\n    useEffect(() => {\n        if (spender) {\n            handleCheckAllowance()\n        }\n    })\n\n    async function handleApprove() {\n        setButtonState({loading: true, text: \"Approving...\"})\n        await approve(provider, signer, tokenIn, spender.contract.address, tokenInAmount).then((approved) => {\n            setButtonState({loading: false, text: \"Approve\"})\n            if (approved) {\n                setShow(false)\n                setApprovalNeeded(false)\n            }\n        })\n    }\n\n    function handleCheckAllowance() {\n                if (spender.needsApproval && tokenInAmount) {\n                    console.log(\"Allowance\", tokenIn.symbol, allowance?.toString())\n\n                    if (!tokenInAmount?.isZero() && tokenInAmount?.gt(allowance ? allowance : BigNumber.from(0))) {\n                        if (!show) {\n                            setShow(true)\n                        }\n                        setApprovalNeeded(true)\n                    } else {\n                        // setButtonState({loading: false, text: \"Approve\", hidden: true})\n                        if (show) {\n                            setShow(false)\n                        }\n                    }\n                } else {\n                    if (show) {\n                        setShow(false)\n                    }\n                }\n    }\n\n    return (\n        <div>\n            <Button\n                variant=\"primary\"\n                disabled={buttonState.loading}\n                hidden={!show}\n                onClick={!buttonState.loading ? handleApprove : null}\n                className={styles.button}\n            >\n                {buttonState.text}\n            </Button>\n        </div>\n\n    );\n}\n\nexport default ApprovalButton","import {useEffect, useState} from \"react\";\nimport {BigNumber, utils} from \"ethers\";\nimport styles from \"./balance.module.css\";\nimport {useAccount, useBalance, useContractRead} from \"wagmi\";\nimport {roundString} from \"../helpers/erc20\";\n\nexport default function Balance({label, token, setParentBalance}) {\n\n    const { address, isConnecting, isDisconnected } = useAccount()\n    const { data: balance, isError, isLoading } = useBalance({\n        addressOrName: address,\n        token: token.symbol !== \"ETH\" ? token.address : \"\",\n        watch: true,\n    })\n\n    useEffect(() => {\n        if (setParentBalance) {\n            setParentBalance(balance)\n        }\n    }, [balance])\n\n    return (\n        <div className={styles.container}>\n\n\n            <h4>{isError}</h4>\n            <h4>{isLoading}</h4>\n            <h4>{roundString(balance?.formatted)}</h4>\n\n            <label className={styles.label}>Balance {label}</label>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './loadingButton.module.css'\n\n\nfunction LoadingButton({text, action, disabled, width}) {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            action().then(() => {\n                setLoading(false);\n            }).catch((error) => {\n                console.error(error);\n                setLoading(false)\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"primary\"\n            disabled={isLoading || disabled}\n            onClick={!isLoading ? handleClick : null}\n            className={styles.button}\n            width={width ? width : \"200px\"}\n        >\n            {isLoading ? 'Loading…' : text}\n        </Button>\n    );\n}\n\nexport default LoadingButton","import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport styles from './swapInput.module.css'\nimport {useEffect, useState} from \"react\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport {roundString} from \"../helpers/erc20\";\nimport {tokenDictionary, eth} from \"../const/const\";\nimport uuid from \"uuid\";\nimport {useAccount, useBalance} from \"wagmi\";\n\n\nexport default function SwapInput({label, values, token, onChangeInput, onChangeAsset, onChangeBalance}) {\n\n        const [query, setQuery] = useState(\"\");\n\n        const { address, isConnecting, isDisconnected } = useAccount()\n        const { data: balance, isError, isLoading } = useBalance({\n                addressOrName: address,\n                token: token.symbol !== \"ETH\" ? token.address : \"\",\n                watch: true,\n        })\n\n        useEffect(() => {\n                if (onChangeInput) {\n                        const timeOutId = setTimeout(() => onChangeInput(query ? query >= 0 ? query: \"0\" : \"0\"), 500);\n                        return () => clearTimeout(timeOutId);\n                }\n        }, [query]);\n\n        useEffect(() => {\n                if (onChangeBalance) {\n                        onChangeBalance(balance?.value)\n                }\n        }, [balance])\n\n        function handleSetMax() {\n                if (token.symbol === eth.symbol) {\n                        if (balance?.value > 50000000000000000) {\n                                let max = balance.value - 50000000000000000\n                                setQuery(utils.formatUnits(max.toString(), token.decimals))\n                        }\n                } else {\n                        setQuery(balance.formatted)\n                }\n        }\n\n\n\n        function handleChangeDropdown(symbol) {\n                onChangeAsset(tokenDictionary[symbol])\n        }\n\n        return (\n        <div className={styles.container}>\n                <div>\n                        <input min={0} value={query} className={styles.swapInput} type=\"number\" onChange={event => setQuery(event.target.value)}/>\n                        <h4 className={styles.balance}>Bal: {roundString(balance?.formatted)}</h4>\n                </div>\n\n                <div>\n                        <DropdownButton className={styles.dropdownButton} id=\"dropdown-basic-button\" title={token.symbol} onSelect={handleChangeDropdown}>\n                                {values.map((op, index) => (\n                                    // eslint-disable-next-line react/jsx-key\n                                    <Dropdown.Item key={index} eventKey={op}>{op}</Dropdown.Item>\n                                ))}\n                        </DropdownButton>\n                        <button onClick={handleSetMax}>Set Max</button>\n                </div>\n\n\n\n        </div>\n    )\n}","import Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport styles from './swapInput.module.css'\nimport {useEffect, useState} from \"react\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport {roundString} from \"../helpers/erc20\";\nimport {tokenDictionary, eth} from \"../const/const\";\nimport uuid from \"uuid\";\nimport {useAccount, useBalance} from \"wagmi\";\nimport {mint} from \"../const/const\";\n\n\nexport default function BurnInput({label, values, token, onChangeInput, onChangeAsset}) {\n\n        const [query, setQuery] = useState(\"\");\n        const [tokenOne, setTokenOne] = useState(undefined);\n        const [tokenTwo, setTokenTwo] = useState(undefined);\n\n\n\n        const { address } = useAccount()\n        const { data: balanceOne } = useBalance({\n                addressOrName: address,\n                token: tokenOne?.address,\n                watch: true,\n        })\n\n        const { data: balanceTwo } = useBalance({\n                addressOrName: address,\n                token: tokenTwo?.address,\n                watch: true,\n        })\n\n        useEffect(() => {\n                if (onChangeInput) {\n                        const timeOutId = setTimeout(() => onChangeInput(query ? query >= 0 ? query: \"0\" : \"0\"), 500);\n                        return () => clearTimeout(timeOutId);\n                }\n        }, [query]);\n\n        useEffect(() => {\n                if (mint[token.symbol].tokens[0].token.symbol !== tokenOne?.symbol) {\n                        setTokenOne(mint[token.symbol].tokens[0].token)\n                }\n                if (mint[token.symbol].tokens[1].token.symbol !== tokenTwo?.symbol) {\n                        setTokenTwo(mint[token.symbol].tokens[1].token)\n                }\n        }, [token])\n\n\n        function handleSetMax() {\n                if (balanceOne > balanceTwo) {\n                        setQuery(balanceTwo?.formatted)\n                } else {\n                        setQuery(balanceOne?.formatted)\n                }\n        }\n\n        function handleChangeDropdown(symbol) {\n                onChangeAsset(tokenDictionary[symbol])\n        }\n\n        return (\n        <div className={styles.container}>\n                <div>\n                        <input min={0} value={query} className={styles.swapInput} type=\"number\" onChange={event => setQuery(event.target.value)}/>\n                        <h4 className={styles.balance}>{tokenOne?.symbol} Bal: {roundString(balanceOne?.formatted)}</h4>\n                        <h4 className={styles.balance}>{tokenTwo?.symbol} Bal: {roundString(balanceTwo?.formatted)}</h4>\n                </div>\n\n                <div>\n                        <DropdownButton className={styles.dropdownButton} id=\"dropdown-basic-button\" title={mint[token.symbol].burnName} onSelect={handleChangeDropdown}>\n                                {values.map((op, index) => (\n                                    // eslint-disable-next-line react/jsx-key\n                                    <Dropdown.Item key={index} eventKey={op}>{mint[op].burnName}</Dropdown.Item>\n                                ))}\n                        </DropdownButton>\n                        <button onClick={handleSetMax}>Set Max</button>\n                </div>\n\n\n\n        </div>\n    )\n}","import type { NextPage } from 'next';\nimport styles from '../styles/Home.module.css';\nimport {eth, mint, mintDictionary, tokenDictionary, trades, weth} from \"../const/const\";\nimport SwapInput from \"../components/swapInput\";\nimport BurnInput from \"../components/burnInput\";\nimport {useEffect, useState} from \"react\";\nimport {approve, checkAllowance, roundString, wethMint} from \"../helpers/erc20\";\nimport {BigNumber, ethers, utils} from \"ethers\";\nimport Balance from \"../components/balance\";\nimport LoadingButton from \"../components/loadingButton\";\nimport ApprovalButton from \"../components/approvalButton\";\nimport {ButtonGroup, ToggleButton} from \"react-bootstrap\";\nimport {useProvider, useSigner} from \"wagmi\";\n\ntype token = {\n    symbol: string\n    decimals: number,\n    address: string,\n    abi: string,\n    balance: BigNumber\n}\n\nconst Mint: NextPage = () => {\n\n    const { data: signer } = useSigner()\n\n    const [mintAsset, setMintAsset] = useState( weth)\n    const [amountIn, setAmountIn] = useState(BigNumber.from(0))\n    // @ts-ignore\n    const [mintOptions, setMintOptions] = useState(mint[weth.symbol])\n    const [buttonState, setButtonState] = useState({disabled: true})\n\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\n\n    const [radioValue, setRadioValue] = useState('Mint');\n    const radios = [\n        { name: 'Mint', value: 'Mint' },\n        { name: 'Burn', value: 'Burn' },\n    ];\n\n    useEffect(() => {\n        checkApprovalState()\n    }, [approvalNeeded, amountIn])\n\n    useEffect(() => {\n\n    }, [radioValue])\n\n    function handleAssetInChange(token: token) {\n        // @ts-ignore\n        let ops = mint[token.symbol]\n\n        setMintAsset(token)\n        setMintOptions(ops)\n    }\n\n    function handleAmountInChange(val: string) {\n        console.log(\"Mint\", val, mintAsset.symbol)\n\n        let amtIn = ethers.utils.parseUnits(val, mintAsset.decimals)\n\n        setAmountIn(amtIn)\n    }\n\n    function checkApprovalState() {\n        // setBurnButtonState({text: 'Burn', disabled: false})\n\n        console.log(\"checkApprovalState\", mintAsset.symbol, amountIn.toString())\n        if (amountIn.isZero() || approvalNeeded) {\n            if (!buttonState.disabled) {\n                setButtonState({disabled: true})\n            }\n        } else {\n            if (buttonState.disabled) {\n                setButtonState({disabled: false})\n            }\n        }\n    }\n\n    async function handleMint() {\n        return await mintOptions.mintFunc(signer,amountIn)\n    }\n\n    async function handleBurn() {\n        return await mintOptions.burnFunc(signer,amountIn)\n    }\n\n    return (\n        <div className={styles.container}>\n                <main className={styles.main}>\n                    <div className={styles.buttonGroup}>\n                        <ButtonGroup >\n                            {radios.map((radio, idx) => (\n                                <ToggleButton\n                                    key={idx}\n                                    id={`radio-${idx}`}\n                                    type=\"radio\"\n                                    variant={'outline-primary'}\n                                    name=\"radio\"\n                                    value={radio.value}\n                                    checked={radioValue === radio.value}\n                                    onChange={(e) => setRadioValue(e.currentTarget.value)}\n                                >\n                                    {radio.name}\n                                </ToggleButton>\n                            ))}\n                        </ButtonGroup>\n                    </div>\n\n                    {radioValue === \"Mint\" ?\n                        <SwapInput label={\"Asset In\"}\n                                   values={Object.keys(mintDictionary).sort()}\n                                   onChangeInput={handleAmountInChange} token={mintAsset}\n                                   onChangeAsset={handleAssetInChange} onChangeBalance={undefined}/> :\n                        <BurnInput label={\"Asset In\"}\n                                   values={Object.keys(mintDictionary).filter((item => !(item === \"ETH\" && radioValue === \"Burn\"))).sort()}\n                                   onChangeInput={handleAmountInChange} token={mintAsset}\n                                   onChangeAsset={handleAssetInChange}/>\n\n                    }\n\n                    {radioValue === \"Mint\" ?\n                        <div className={styles.horizontalContainer}>\n                            {mintOptions.tokens.map((op: any, index: number) => (\n                                <Balance key={op.token.symbol} label={op.token.symbol} token={op.token}\n                                         setParentBalance={undefined}/>\n                            ))}\n                        </div> :\n                        <div className={styles.horizontalContainer}>\n                                <Balance key={mintAsset.symbol} label={mintAsset.symbol} token={mintAsset}\n                                         setParentBalance={undefined}/>\n                        </div>\n                    }\n\n                    { radioValue === \"Mint\" ?\n                        <ApprovalButton tokenIn={mintAsset} spender={mintOptions}\n                                    tokenInAmount={amountIn} setApprovalNeeded={setApprovalNeeded}></ApprovalButton> : \"\"\n                    }\n\n                    <div className={styles.horizontalContainer}>\n                        { radioValue === \"Mint\" ?\n                            <LoadingButton text={\"Mint\"} action={handleMint} disabled={buttonState.disabled} width={undefined}/> :\n                            <LoadingButton text={\"Burn\"} action={handleBurn} disabled={buttonState.disabled} width={undefined}/>\n                        }\n                    </div>\n\n                </main>\n        </div>\n    );\n};\n\nexport default Mint;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"approvalButton_button__LESyp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"balance_container__7C_Xe\",\"label\":\"balance_label__PEcbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"loadingButton_button__f0GQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"swapInput_container__y2UWD\",\"swapInput\":\"swapInput_swapInput__cssZy\",\"balance\":\"swapInput_balance__S3DUq\",\"dropdownButton\":\"swapInput_dropdownButton__ZWzTk\",\"value\":\"swapInput_value__zQtjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__nLjiQ\",\"footer\":\"Home_footer____T7K\",\"title\":\"Home_title__T09hD\",\"description\":\"Home_description__41Owk\",\"grid\":\"Home_grid__GxQ85\",\"card\":\"Home_card___LpL1\",\"horizontalContainer\":\"Home_horizontalContainer__bpyg8\",\"buttonGroup\":\"Home_buttonGroup__6xIkp\"};","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst noop = () => undefined;\n\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, { ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;"],"names":["window","__NEXT_P","push","tokenIn","tokenInAmount","spender","setApprovalNeeded","provider","useProvider","data","useSigner","useAccount","address","useState","isConnecting","isDisconnected","show","setShow","loading","text","buttonState","setButtonState","useContractRead","addressOrName","contractInterface","abi","functionName","args","contract","watch","onSuccess","console","log","onError","error","handleApprove","approve","signer","then","approved","useEffect","needsApproval","symbol","allowance","toString","isZero","gt","BigNumber","div","Button","variant","disabled","hidden","onClick","className","styles","Balance","label","token","setParentBalance","useBalance","isError","isLoading","balance","h4","roundString","formatted","action","width","setLoading","catch","SwapInput","values","onChangeInput","onChangeAsset","onChangeBalance","query","setQuery","timeOutId","setTimeout","clearTimeout","value","input","min","type","onChange","event","target","DropdownButton","id","title","onSelect","tokenDictionary","map","op","index","Dropdown","eventKey","button","eth","max","utils","decimals","BurnInput","undefined","tokenOne","setTokenOne","tokenTwo","setTokenTwo","mint","tokens","balanceOne","balanceTwo","burnName","handleAssetInChange","ops","setMintAsset","setMintOptions","handleAmountInChange","val","mintAsset","amtIn","ethers","setAmountIn","weth","amountIn","mintOptions","approvalNeeded","radioValue","setRadioValue","handleMint","mintFunc","handleBurn","burnFunc","main","ButtonGroup","name","radio","idx","ToggleButton","checked","e","currentTarget","Object","keys","mintDictionary","sort","filter","item","ApprovalButton","LoadingButton","module","exports","bsPrefix","size","vertical","as","Component","rest","ref","prefix","baseClass","displayName","defaultProps","role","noop","inputRef","props","children","autoComplete","htmlFor"],"sourceRoot":""}